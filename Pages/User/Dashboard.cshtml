@page
@model app_example.Pages.User.DashboardModel
@{
    ViewData["Title"] = "Staff Dashboard";
    var branch = string.Join(" ", (Model.Branch ?? "").Split(' ').Take(2));
}

<h1 class="text-2xl font-bold mb-4">Dashboard</h1>

<!-- Dashboard Grid -->
<div class="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-6xl mx-auto p-4">

    <!-- Date -->
    <div class="bg-white border border-gray-200 rounded-xl shadow p-5 flex items-start gap-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3M16 7V3M4 11h16M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
        </svg>
        <div>
            <div class="text-sm text-gray-500">Date</div>
            <div class="text-xl font-semibold text-gray-900">
                @Model.Summary.Date.ToString("MMMM dd, yyyy")
            </div>
        </div>
    </div>

    <!-- Visitors -->
    <div class="bg-white border border-gray-200 rounded-xl shadow p-5 flex items-start gap-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a4 4 0 00-4-4h-1M9 20H4v-2a4 4 0 014-4h1m6-4a4 4 0 11-8 0 4 4 0 018 0zm6 4a4 4 0 00-3-3.87" />
        </svg>
        <div>
            <div class="text-sm text-gray-500">Visitors</div>
            <div class="text-3xl font-bold text-blue-600">
                @Model.Summary.TotalJumpers
            </div>
        </div>
    </div>

    <!-- Total Sales -->
    <div class="bg-white border border-gray-200 rounded-xl shadow p-5 flex items-start gap-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-yellow-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-6v.01M12 12v.01M21 12c0 4.418-4.03 8-9 8s-9-3.582-9-8 4.03-8 9-8 9 3.582 9 8z" />
        </svg>

        <div>
            <div class="text-sm text-gray-500">Total Sales</div>
            <div class="text-3xl font-bold text-green-600">
                ₱@Model.Summary.TotalSales.ToString("N2")
            </div>
        </div>
    </div>
</div>

<div class="max-w-7xl mx-auto p-4 flex flex-wrap justify-end">
    <button id="openModalBtn" class="bg-gray-300 hover:bg-gray-400 text-gray-800 py-2 px-4 rounded inline-flex items-center">
        <span>+ New Transaction</span>
    </button>
</div>

<!-- Modal -->
<div id="createModal"
     class="fixed inset-0 z-50 bg-black bg-opacity-50 hidden items-center justify-center">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-md p-6 relative">
        <h2 class="text-lg font-semibold mb-4">Create Transaction</h2>

        <form method="post" class="space-y-4">
            <div asp-validation-summary="ModelOnly" class="text-red-600 text-sm"></div>

            <div class="mb-3">
                <label class="block text-sm font-medium mb-1">Promo</label>
                <select asp-for="Transaction.Promo" class="border rounded w-full p-2 bg-white">
                    <option value="">Select Promo</option>
                    <option value="Early Bird">Early Bird - ₱399</option>
                    <option value="Regular">Regular - ₱499</option>
                </select>
                <span asp-validation-for="Transaction.Promo" class="text-red-500 text-xs"></span>
            </div>

            <div class="mb-3">
                <label class="block text-sm font-medium">Number of Jumpers</label>
                <input asp-for="Transaction.NumberOfJumpers" type="number" class="border rounded w-full p-2" />
                <span asp-validation-for="Transaction.NumberOfJumpers" class="text-red-500 text-xs"></span>
            </div>

            <div class="mb-3">
                <label class="inline-flex items-center">
                    <input asp-for="Transaction.IsDiscounted" type="checkbox" class="mr-2" />
                    Discounted
                </label>
            </div>

            <div class="mb-3">
                <label class="block text-sm font-medium">Customer Name</label>
                <input asp-for="Transaction.CustomerName" class="border rounded w-full p-2" />
                <span asp-validation-for="Transaction.CustomerName" class="text-red-500 text-xs"></span>
            </div>

            <div class="mb-3">
                <label class="block text-sm font-medium">Email</label>
                <input asp-for="Transaction.Email" type="email" class="border rounded w-full p-2" />
                <span asp-validation-for="Transaction.Email" class="text-red-500 text-xs"></span>
            </div>

            <div class="flex justify-end space-x-2">
                <button type="button" id="closeModalBtn" class="px-4 py-2 rounded border">Cancel</button>
                <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">Submit</button>
            </div>
        </form>
    </div>
</div>

<script>
    const modal = document.getElementById("createModal");
    const openBtn = document.getElementById("openModalBtn");
    const closeBtn = document.getElementById("closeModalBtn");

    openBtn.addEventListener("click", () => {
        modal.classList.remove("hidden");
        modal.classList.add("flex");
    });

    closeBtn.addEventListener("click", () => {
        modal.classList.remove("flex");
        modal.classList.add("hidden");
    });

    modal.addEventListener("click", (e) => {
        if (e.target === modal) {
            modal.classList.remove("flex");
            modal.classList.add("hidden");
        }
    });
</script>

@if (Model.Summary.Transactions == null || !Model.Summary.Transactions.Any())
{
    <p class="text-gray-600">You have no transactions yet.</p>
}
else
{
    <div class="overflow-x-auto mt-6">
        <table class="min-w-full bg-white border border-gray-300 shadow-sm">
            <thead>
                <tr class="bg-gray-100">
                    <th class="text-left py-2 px-4 border-b">Transaction ID</th>
                    <th class="text-left py-2 px-4 border-b">Customer Name</th>
                    <th class="text-left py-2 px-4 border-b">Email</th>
                    <th class="text-left py-2 px-4 border-b">Promo</th>
                    <th class="text-left py-2 px-4 border-b">Jumpers</th>
                    <th class="text-left py-2 px-4 border-b">Discounted</th>
                    <th class="text-left py-2 px-4 border-b">Total</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var tx in Model.Summary.Transactions.OrderByDescending(t => t.Id))
                {
                    <tr class="hover:bg-blue-50">
                        <td class="py-2 px-4 border-b">@tx.Id</td>
                        <td class="py-2 px-4 border-b">@tx.CustomerName</td>
                        <td class="py-2 px-4 border-b">@tx.Email</td>
                        <td class="py-2 px-4 border-b">@tx.Promo</td>
                        <td class="py-2 px-4 border-b">@tx.NumberOfJumpers</td>
                        <td class="py-2 px-4 border-b">@(tx.IsDiscounted ? "Yes" : "No")</td>
                        <td class="py-2 px-4 border-b font-semibold">
                            @tx.TotalAmount.ToString("C", new System.Globalization.CultureInfo("en-PH"))
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
